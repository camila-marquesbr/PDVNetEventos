// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PDVNetEventos.Data;

#nullable disable

namespace PDVNetEventos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PDVNetEventos.Data.Entities.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OrcamentoMaximo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEventoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoEventoId");

                    b.ToTable("Eventos", t =>
                        {
                            t.HasCheckConstraint("CK_Evento_Datas", "[DataInicio] <= [DataFim]");
                        });
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.EventoFornecedor", b =>
                {
                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAcordado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EventoId", "FornecedorId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("EventosFornecedores");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.EventoParticipante", b =>
                {
                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("EventoId", "ParticipanteId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("EventosParticipantes");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PrecoPadrao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.TipoEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposEvento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Congresso"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Workshop"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Interno"
                        });
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.Evento", b =>
                {
                    b.HasOne("PDVNetEventos.Data.Entities.TipoEvento", "TipoEvento")
                        .WithMany("Eventos")
                        .HasForeignKey("TipoEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEvento");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.EventoFornecedor", b =>
                {
                    b.HasOne("PDVNetEventos.Data.Entities.Evento", "Evento")
                        .WithMany("Fornecedores")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDVNetEventos.Data.Entities.Fornecedor", "Fornecedor")
                        .WithMany("Eventos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.EventoParticipante", b =>
                {
                    b.HasOne("PDVNetEventos.Data.Entities.Evento", "Evento")
                        .WithMany("Participantes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDVNetEventos.Data.Entities.Participante", "Participante")
                        .WithMany("Eventos")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.Evento", b =>
                {
                    b.Navigation("Fornecedores");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.Fornecedor", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.Participante", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("PDVNetEventos.Data.Entities.TipoEvento", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
